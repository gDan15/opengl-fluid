#version 430

layout (local_size_x = 4) in;

struct Particle
{
    vec4 position;
    vec4 velocity;
};

layout(binding = 1) buffer particlesBlock
{
    Particle particles[];
};

void main()
{
    uint index = gl_GlobalInvocationID.x;
    vec3 v = particles[index].velocity.xyz;
    vec3 p = particles[index].position.xyz;

    v += (1.0/60.0) * vec3(0, -9.81, 0);
    p += (1.0/60.0) * v;

    int xAxisH = 8;
    int xAxisL = 0;

    int yAxisH = 8;
    int yAxisL = 0;

    int zAxisH = 12;
    int zAxisL = 0;

    //TODO : if change in cubes dimensions
    if(p.y < yAxisL || p.y > yAxisH) {
      if(p.y < yAxisL){
        p.y = yAxisL;
        v.y = -v.y;
      }else{
        p.y = yAxisH;
        v.y = -v.y;
      }
    }
    if(p.x > xAxisH || p.x < xAxisL){
      if(p.x < xAxisL){
        p.x = xAxisL;
        v.x = -v.x;
      }else{
        p.x = xAxisH;
        v.x = -v.x;
      }
    }
    if(p.x > zAxisH || p.x < zAxisL){
      if(p.x < zAxisL){
        p.x = zAxisL;
        v.x = -v.x;
      }else{
        p.x = zAxisH;
        v.x = -v.x;
      }
    }
    particles[index].velocity = vec4(v, 2.0);
    particles[index].position = vec4(p, 1.0);
}
